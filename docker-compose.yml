services:
  redis:
    image: redis:7-alpine
    container_name: api-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: api-service
    ports:
      - '3000:3000'
    env_file:
      - .env
    develop:
      watch:
        - action: sync
          path: ./api
          target: /app/api
          ignore:
            - node_modules/
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: bot-service
    env_file:
      - .env
    develop:
      watch:
        - action: sync
          path: ./bot
          target: /app/bot
          ignore:
            - node_modules/
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
